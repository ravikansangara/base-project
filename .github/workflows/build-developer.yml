#---------------------------------------------------
# Developer Build
#---------------------------------------------------

name: Developer Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Software Version'
        required: true
        type: string


env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

  # Jfrog server URL
  JF_URL: ${{ vars.JF_URL }}

  # Jfrog authentication credentials
  JF_USER: ${{ secrets.JF_USER }}
  JF_PASSWORD: ${{ secrets.JF_PASSWORD }}

  # Jfrog artifact upload repository path
  LOCAL_ATRIFACT_PATH: "build/base_app"
  JF_ARTIFACT_UPLOAD_REPO_PATH: "product-dev-release/${{ github.head_ref }}product-v$GITHUB_RUN_NUMBER/"

jobs:
  build_and_deploy:
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: [self-hosted, build]

    steps:
    - name: Checkout repository with submodules
      uses: actions/checkout@v4
      with:
        # Initialize and update submodules recursively
        submodules: recursive

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

    - name: Build
      run: cmake --build ${{github.workspace}}/build

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.4.3
      with:
      
        # Artifact name
        name: base_app

        # A file, directory or wildcard pattern that describes what to upload
        path: build/base_app

        # The desired behavior if no files are found using the provided path.
        if-no-files-found: error

        # Duration after which artifact will expire in days. 0 means using default retention.
        retention-days: 1

    - name: Set up JFrog CLI
      uses: jfrog/setup-jfrog-cli@v4
      with:
        version: 'latest'

    - name: Configure JFrog CLI
      run: |
        jf c add artifactory --url="${{ env.JF_URL }}" --user="${{ env.JF_USER }}" --password="${{ env.JF_PASSWORD }}" --overwrite=true --interactive=false

    - name: Upload to JFrog Artifactory
      run: jf rt upload "${{ env.LOCAL_ATRIFACT_PATH }}" "${{ env.JF_ARTIFACT_UPLOAD_REPO_PATH }}" --flat=true

    - name: Send Email Notification
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        #secure: true
        username: ${{ secrets.GMAIL_USERNAME }}
        password: ${{ secrets.GMAIL_PASSWORD }}
        subject: "Developer Build successful!"
        body: "A new artifact has been uploaded to Jfrog Artifactory."
        to: "kansangara.ravi@gmail.com"
        from: "kansangara.ravi@gmail.com"
