name: Production Build - Linux Project

on:
  workflow_dispatch:
    inputs:
      build_ref:
        description: "Tag name to build (e.g., v1.0.0)"
        required: true

jobs:

  # --------------------------------------------------
  # Validates input parameters
  # --------------------------------------------------
  init_build_context:
    runs-on: ${{ fromJSON(vars.ORGANIZATION_RUNNER_LABEL) }}
    outputs:
      build_ref: ${{ steps.set_build_ref.outputs.build_ref }}
      release_type: ${{ steps.set_release_type.outputs.release_type }}
      git_ref: ${{ steps.set_git_ref.outputs.git_ref }}
      artifact_upload_repo_name: ${{ steps.set_artifact_upload_repo_name.outputs.repo_name }}

    steps:

    - name: Set branch/tag reference for build
      id: set_build_ref
      run: echo "build_ref=${{ inputs.build_ref }}" >> $GITHUB_OUTPUT

    - name: Check for git tag existence
      id: check_tag
      shell: bash
      env:
        BUILD_REF_NAME: ${{ steps.set_build_ref.outputs.build_ref }}
        REPO_URL: https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
      run: |
        echo "Repo URL: ${REPO_URL}"
        if ! git ls-remote --tags ${REPO_URL} | grep -q "refs/tags/${BUILD_REF_NAME}$"; then
          echo "[ERROR] Tag '${BUILD_REF_NAME}' does not exist to build."
          exit 1
        fi

    - name: Set git reference for the build
      id: set_git_ref
      run: echo "git_ref=refs/tags/${{ inputs.build_ref }}" >> $GITHUB_OUTPUT

    - name: Set release type
      id: set_release_type
      run: echo "release_type=production" >> $GITHUB_OUTPUT

    - name: Set artifact upload repo name
      id: set_artifact_upload_repo_name
      run: echo "repo_name=product-dev-release-repo" >> $GITHUB_OUTPUT

    - name: Validate git reference for release type
      uses: ./.github/actions/validate-build-ref@main
      with:
        release: ${{ steps.set_release_type.outputs.release_type }}
        branch_tag: ${{ steps.set_git_ref.outputs.git_ref }}

  # --------------------------------------------------
  # Calls the reusable workflow for building the project
  # --------------------------------------------------
  invoke_workflow:
    needs: [init_build_context]
    uses: ./.github/workflows/reusable-workflow-build.yml
    secrets: inherit
    
    with:
      release_type: ${{ needs.init_build_context.outputs.release_type }}
      build_iteration: 0
      build_ref: ${{ needs.init_build_context.outputs.build_ref }}
      artifact_upload_repo_name: ${{ needs.init_build_context.outputs.artifact_upload_repo_name }}
      git_ref: ${{ needs.init_build_context.outputs.git_ref }}