name: Playground

on:
  workflow_dispatch:
    inputs:
      git_ref:
        description: "Branch or tag name to checkout"
        required: true
        default: main

jobs:
  build-project:
    runs-on: ubuntu-latest
    env:
      GIT_REF: ${{ github.event.inputs.git_ref }}

    steps:
    - name: Checkout repository with submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
        ref: ${{ env.GIT_REF }}

    - name: Get branch/tag reference
      id: get_ref
      shell: python
      run: |
        import os
        import subprocess
        try:
            ref_name = subprocess.check_output(["git", "branch", "--show-current"], text=True).strip()
        except subprocess.CalledProcessError:
            try:
                ref_name = subprocess.check_output(["git", "describe", "--tags", "--exact-match"], text=True).strip()
            except subprocess.CalledProcessError:
                ref_name = subprocess.check_output(["git", "rev-parse", "--short", "HEAD"], text=True).strip()

        with open(os.environ["GITHUB_OUTPUT"], "a") as f:
            f.write(f"git_ref_name={ref_name}\n")

    - name: Get commit SHA for current build reference
      id: get_sha
      shell: python
      run: |
        import os
        import subprocess

        try:
            sha = subprocess.check_output(["git", "rev-parse", "--short", "HEAD"], text=True).strip()
        except subprocess.CalledProcessError:
            raise SystemExit("[Error] Failed to get commit SHA. Ensure the repository is checked out.")

        print(f"[INFO] Resolved commit SHA: {sha}")

        with open(os.environ["GITHUB_OUTPUT"], "a", encoding="utf-8") as f:
          f.write(f"commit_sha={sha}\n")
