name: Build Project

on:
  workflow_dispatch:  # Allows manual triggering
  # push:
  #   branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

  # JFrog server URL
  JF_URL: ${{ vars.JF_URL }}

  # JFrog authentication credentials
  JF_USER: ${{ secrets.JF_USER }}
  JF_PASSWORD: ${{ secrets.JF_PASSWORD }}

  # JFrog artifact upload repository path
  LOCAL_ARTIFACT_PATH: "build/base_app"
  SW_PACKAGE_NAME: "my-product-v${{ github.run_number }}.zip"
  JF_ARTIFACT_UPLOAD_REPO_PATH: "product-prod-release/product-v${{ github.run_number }}/"

jobs:
  build_and_deploy:
    runs-on: [self-hosted, build]

    steps:
    - name: Checkout repository with submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

    - name: Build
      run: cmake --build ${{github.workspace}}/build

    - name: Create Software Package
      run: |
        cd build
        zip -r "../${{ env.SW_PACKAGE_NAME }}" base_app
      shell: bash

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.4.3
      with:
        name: ${{ env.SW_PACKAGE_NAME }}
        path: ${{ github.workspace }}/${{ env.SW_PACKAGE_NAME }}
        if-no-files-found: error
        retention-days: 1

    - name: Set up JFrog CLI
      uses: jfrog/setup-jfrog-cli@v4
      with:
        version: 'latest'

    - name: Configure JFrog CLI
      run: |
        jf c add artifactory --url="${{ env.JF_URL }}" --user="${{ env.JF_USER }}" --password="${{ env.JF_PASSWORD }}" --overwrite=true --interactive=false

    - name: Upload Artifact to JFrog Artifactory
      run: jf rt upload "${{ github.workspace }}/${{ env.SW_PACKAGE_NAME }}" "${{ env.JF_ARTIFACT_UPLOAD_REPO_PATH }}" --flat=true

    - name: Send Email Notification
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.GMAIL_USERNAME }}
        password: ${{ secrets.GMAIL_PASSWORD }}
        subject: "Build successful!"
        body: ""
        to: "kansangara.ravi@gmail.com"
        from: "kansangara.ravi@gmail.com"
